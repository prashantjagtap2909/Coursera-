Progamming Assignment no. 3

Problem 2. Rapid Sorting of Arrays with Bounded Number of Elements.

def swap(a, i, j):
    assert 0 <= i < len(a), f'accessing index {i} beyond end of array {len(a)}'
    assert 0 <= j < len(a), f'accessing index {j} beyond end of array {len(a)}'
    a[i], a[j] = a[j], a[i]

def simplePartition(a, pivot):
   
    # your code here
    #student name Prashant jagtap
   
    left_partition, right_partition = [], []
    for elt in a:
        if elt <= pivot:
            left_partition.append(elt)
        else:
            right_partition.append(elt)
   
    for i, elt in enumerate(left_partition + right_partition):
        a[i] = elt

            
    
            
def boundedSort(a, k):
    for j in range(1, k):
        simplePartition(a, j)
        
        
********************************************************************************************************************

